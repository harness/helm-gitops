# Default values for gitops.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

global:
  database:
    postgres:
      ## - installed = true if installed within cluster
      installed: true
      ## - protocol to use for connection
      protocol: postgres
      ## - host array for external
      hosts:
        - postgres:5432
      ## - secret name containing external values
      secretName: ""
      ## - key within secret containing username
      userKey: ""
      ## - key within secret containing password
      passwordKey: ""
      ## - extra arguments set to connection string
      extraArgs: ""
    mongo:
      installed: true
      protocol: mongodb
      # --  provide default values if mongo.installed is set to false
      hosts: []
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
    timescaledb:
      installed: true
      protocol: "jdbc:postgresql"
      # --  provide default values if mongo.installed is set to false
      hosts:
        - timescaledb-single-chart:5432
      secretName: ""
      userKey: ""
      passwordKey: ""
      extraArgs: ""
  ingress:
    enabled: false
    hosts:
      - 'my-host.example.org'
    tls:
      enabled: false
      secretName: harness-ssl
    objects:
      annotations: {}
  istio:
    enabled: false
    gateway:
      create: false
    virtualService:
      gateways:
      hosts:

  internalIngress:
    enabled: false

  loadbalancerURL: "https://test"


image:
  registry: docker.io
  repository: harness/gitops-service-signed
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.70.9"
  digest: ""
  imagePullSecrets: []

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  httpServerPort: 7908
  grpcServerPort: 7909
  port: 80
  httpBind: ":7908"

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 2
    memory: 256Mi
  requests:
    cpu: 2
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

ingress:
  annotations: {}
  className: "internal"
  hosts:
    - host: ""
      paths:
        - path: /gitops
          pathType: ImplementationSpecific

waitForInitContainer:
  image:
    registry: docker.io
    repository: harness/helm-init-container
    pullPolicy: IfNotPresent
    tag: "latest"
    digest: ""
    imagePullSecrets: []

upgraderImage:
  image:
    registry: docker.io
    repository: harness/upgrader
    pullPolicy: Always
    tag: "latest"
    digest: ""
    imagePullSecrets: []

agentDockerImage:
  image:
    registry: docker.io
    repository: harness/gitops-agent
    pullPolicy: Always
    tag: "v0.42.0"
    digest: ""
    imagePullSecrets: []

argoAppSetImage:
  image:
    registry: quay.io
    repository: argoproj/argocd-applicationset
    pullPolicy: IfNotPresent
    tag: "v0.4.1"
    digest: ""
    imagePullSecrets: []

argoCDImage:
  image:
    registry: quay.io
    repository: argoproj/argocd
    pullPolicy: IfNotPresent
    tag: "v2.3.4"
    digest: ""
    imagePullSecrets: []

agentHAProxyImage:
  image:
    registry: docker.io
    repository: haproxy
    pullPolicy: IfNotPresent
    tag: "2.0.25-alpine"
    digest: ""
    imagePullSecrets: []

agentRedisImage:
  image:
    registry: docker.io
    repository: redis
    pullPolicy: IfNotPresent
    tag: "6.2.6-alpine"
    digest: ""
    imagePullSecrets: []

accessControlService:
  basePath: "api/"
  host: "access-control:9006"
  skipSecureVerify: "true"
  secret: "IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM"
  defaultSchemes: "http"

agent:
  protocol: "HTTP1"
  versionFileLocation: "/app/VERSIONS/AGENT"
  dockerImageRepo: "harness/gitops-agent"
  minimumV2Version: "0.33.0"
  enableAuth: "false"
  tlsEnabled: "false"
  customImage: "true"
certPath: ""
enableCDN: "false"
eventsFrameworkEnvNamespace: "free"
gitopsHttpAcme: "false"
gitopsTaskLongPolling: "true"
grpcPort: 7909
keyPath: ""
logFormat: ""
metricsPort: 6565
mongo:
  enableReflection: "true"
  dbName: "harness-gitops"
  dropAllIndexesOnce: "false"
  username:
    name: harness-secrets
    key: mongodbUsername
  password:
    name: mongodb-replicaset-chart
    key: mongodb-root-password
timescale:
  certPath: ""
  dbName: "harness_gitops"
  logLevel: 3
  useTls: "false"
  password:
    name: harness-secrets
    key: timescaledbPostgresPassword
platformService:
  url: "http://ng-manager:7090"
  skipSecureVerify: "true"
  secret: "IC04LYMBf1lDP5oeY4hupxd4HJhLmN6azUku3xEbeE3SUx5G3ZYzhbiwVtK4i7AmqyU9OZkwB4v8E9qM"

redis:
  masterName: "harness-redis"
  password:
    name: harness-secrets
    key: redisPassword
  sslCAPath: ""
  sslEnabled: "false"
versionFileLocation: "/app/VERSIONS/SERVER"
jwtSecret: "HVSKUYqD4e5Rxu12hFDdCJKGM64sxgEynvdDhaOHaTHhwwn0K4Ttr0uoOxSsEVYNrUU="
identitySecret: "HVSKUYqD4e5Rxu12hFDdCJKGM64sxgEynvdDhaOHaTHhwwn0K4Ttr0uoOxSsEVYNrUU="
