# Default values for gitops.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: docker.io
  repository: harness/gitops-service-signed
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.49.5"
  digest: ""

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  httpServerPort: 7908
  grpcServerPort: 7909
  port: 80
  httpBind: ":7908"

resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

ingress:
  enabled: true
  className: "gitops-http-ingress"
  hosts:
    - host: ""
      paths:
        - path: /gitops
          pathType: Prefix

waitForInitContainer:
  image:
    registry: docker.io
    repository: harness/helm-init-container
    pullPolicy: IfNotPresent
    tag: "latest"
    digest: ""

global:
  loadbalancerURL: "https://test"
  accessControlService:
    basePath: ""
    host: ""
    skipSecureVerify: "true"
#    secret:
#      name: harness-secrets
#      key: aclSecret
  agent:
    httpTarget: gitops-service:7908
    grpcTarget: gitops-service:7909
    protocol: "GRPC"
    versionFileLocation: "/app/VERSIONS/AGENT"
    upgraderImage: "harness/upgrader:latest"
    dockerImageRepo: "harness/gitops-agent"
    minimumV2Version: "0.33.0"
    enableAuth: "false"
  certPath: ""
  enableCDN: "false"
  eventsFrameworkEnvNamespace: ""
  gitopsHttpAcme: "false"
  gitopsTaskLongPolling: "true"
  grpcPort: 7909
  keyPath: ""
  logFormat: ""
  metricsPort: 6565
  mongo:
    enableReflection: "false"
    dbName: "harness-gitops"
    dropAllIndexesOnce: "false"
    username:
      name: harness-secrets
      key: mongodbUsername
    password:
      name: mongodb-replicaset-chart
      key: mongodb-root-password
  timescale:
    certPath: ""
    dbName: "harness-gitops"
    logLevel: 2
    useTls: "false"
    password:
      name: harness-secrets
      key: timescaledbPostgresPassword
  platformService:
    url: ""
    skipSecureVerify: "true"
  redis:
    masterName: "harness-redis"
    password:
      name: harness-secrets
      key: redisPassword
    sslCAPath: ""
    sslEnabled: "false"
  versionFileLocation: "/app/VERSIONS/SERVER"



